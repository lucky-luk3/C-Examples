#include <iostream>
#include <windows.h>

using namespace std;

int main()
{
    WCHAR name[] = L"cmd"; //new process
    DWORD pid = 5668; //Spoofed Parent PID

    HANDLE hParent = ::OpenProcess(PROCESS_CREATE_PROCESS, FALSE, pid);

    PROCESS_INFORMATION pi;
    PPROC_THREAD_ATTRIBUTE_LIST attList = nullptr;

    SIZE_T size = 0;
    ::InitializeProcThreadAttributeList(nullptr, 1, 0, &size); //Initialitation

    attList = (PPROC_THREAD_ATTRIBUTE_LIST)malloc(size); //Alloc Space

    InitializeProcThreadAttributeList(attList, 1, 0, &size);
    UpdateProcThreadAttribute(attList, 0, PROC_THREAD_ATTRIBUTE_PARENT_PROCESS,
        &hParent, sizeof(hParent), nullptr, nullptr);  //Save new ppid in attlist

    STARTUPINFOEX si = { sizeof(si) };
    si.lpAttributeList = attList; //save attList in si
    BOOLEAN success = CreateProcess(nullptr, name, nullptr, nullptr, FALSE,
        EXTENDED_STARTUPINFO_PRESENT| CREATE_NEW_CONSOLE, nullptr, nullptr, (STARTUPINFO*)&si, &pi);

    WaitForSingleObject(pi.hProcess, INFINITE);
    DWORD code;
    GetExitCodeProcess(pi.hProcess, &code);
    ::CloseHandle(pi.hProcess);
    ::CloseHandle(pi.hThread);
    ::CloseHandle(hParent);
    if (attList) {
        ::DeleteProcThreadAttributeList(attList);
        ::free(attList);
    }
    return pi.dwProcessId;
}

